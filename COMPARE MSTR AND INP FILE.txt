IDENTIFICATION DIVISION.
PROGRAM-ID.  CCH00901.
AUTHOR. AKASH KUMAR.
***********************************************************************************************************************************
*    THIS PROGRAM CREATES DAILY CCH VALIDATION FILE.
*    INPUT : CCH JOB INPUT FILE WITH HEADER AND TRAILER MASTER KEYFILE.
*            NOTE : THIS PROGRAM WILL WORK FOR THE FILE WITH OR WITHOUR HEADER AND TRAILER.
*
*    OUTPUT : CCH OUT FILE WITH 'CC' VALUE
*             CCH OUT FILE WITH 'LC' VALUE
***********************************************************************************************************************************
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT MST-KEY-FILE ASSIGN TO MSTRKEY.
    SELECT CCH-INP-FILE ASSIGN TO CCHINP.
    SELECT CCH-CC-OUT ASSIGN TO CCHCCOP.
    SELECT CCH-LC-OUT ASSIGN TO CCHLCOP.
DATA DIVISION.
FILE-SECTION.
FD  MST-KEY-FILE
    RECORDING MODE IS F
    LABEL RECORDS ARE STANDARD
    BLOCK CONTAINS 0 RECORDS.
01  MST-KEY-REC.
    05 ACCT-NUMBER2           PIC X(16).
    05 FILLER                 PIC X(1).
    05 KEY-SPA                PIC X(12).
    05 FILLER                 PIC X(1).
    05 PROD-TYPE              PIC X(03).
    05 FILLER                 PIC X(1).
    05 CREDIT-TYPE            PIC X(2).
    05 FILLER                 PIC X(04).

FD  CCH-INP-FILE
    RECORDING MODE V
    BLOCK CONTAINS 0 RECORDS
    RECORD IS VARYING IN SIZE FROM 1 TO 23548 CHARACTERS DEPENDING ON REC-LENGTH.
01  CCH-INP-REC.
    05 RECORD-IND             PIC X(1).
    05 FILLER                 PIC X(37).
    05 ACCT-NUMBER1           PIC X(16).
    05 FILLER                 PIC X(23494).

FD  CCH-CC-OUT.
    RECORDING MODE V
    BLOCK CONTAINS 0 RECORDS
    RECORD IS VARYING IN SIZE FROM 1 TO 23548 CHARACTERS DEPENDING ON REC-LENGTH.
01  CCH-CC-REC                PIC X(23548).

FD  CCH-LC-OUT.
    RECORDING MODE V
    BLOCK CONTAINS 0 RECORDS
    RECORD IS VARYING IN SIZE FROM 1 TO 23548 CHARACTERS DEPENDING ON REC-LENGTH.
01  CCH-LC-REC                PIC X(23548).

WORKING-STORAGE SECTION.
  01 WS-HEADER-REC            PIC X(23548).
  01 WS-TRAILER-REC           PIC X(23548).

  01 REC-LENGTH               PIC 9(5).
  01 MATCH-FOUND              PIC X(1) VALUE 'N'.
  01 EOF1                     PIC X(1) VALUE 'N'.
  01 EOF2                     PIC X(1) VALUE 'N'.
  01 EOF11                    PIC X(1) VALUE 'N'.
  01 EOF22                    PIC X(1) VALUE 'N'.
  01 CURR-ACCT-NUMBER         PIC X(16) VALUE ZEROES.
  01 TOTAL-COUNT              PIC X(18) VALUE ZEROES.
  01 CC-REC-COUNT             PIC X(18) VALUE ZEROES.
  01 LC-REC-COUNT             PIC X(18) VALUE ZEROES.
  01 INPUT-REC-COUNT          PIC X(18) VALUE ZEROES.
  01 TRAILER-IND              PIC X(1) VALUE 'N'.
  01 USER-CODE                PIC S9(4) VALUE 0.

PROCEDURE DIVISION.
  PERFORM 1000-INITIALIXATION.
  PERFORM 2000-PROCESS-PARA UNTIL EOF = 'Y' OR EOF2 = 'Y'.
  PERFORM 4000-CLOSE-PARA.

1000-INITIALIZATION.
  OPEN INPUT CCH-INP-FILE
             MST-KEY-FILE.
  OPEN OUTPUT CCH-CC-OUT
              CCH-LC-OUT.

  MOVE SPACES TO WS-HEADER-REC.
  MOVE SPACES TO WS-TRAILER-REC.

  MOVE 'N' TO EOF1.
  MOVE 'N' TO EOF2.

  PERFORM 1500-INPUT-READ.
  PERFORM 1600-MSTR-READ.

1500-INPUT-READ.
  READ CCH-INP-FILE
  AT END MOVE 'Y' TO EOF1
  END-READ

  MOVE SPACES TO WS-HEADER-REC
  MOVE SPACES TO WS-TRAILER-REC
  MOVE SPACES TO CCH-CC-REC
  MOVE SPACES TO CCH-LC-REC

  IF EOF1 NOT = 'Y'
    IF RECORD-IND = 'H' THEN 
      MOVE CCH-INP-REC TO WS-HEADER-REC
      WRITE CCH-CC-REC TO WS-HEADER-REC
      WRITE CCH-LC-REC TO WS-HEADER-REC
   ELSE IF RECORD-IND = 'T' THEN
      MOVE CCH-INP-REC TO WS-TRAILER-REC
      MOVE 'Y' TO TRAILER-IND
   ELSE
      CONTINUE
      ADD 1 TO INP-REC-COUNT
   END-IF
  END-IF.

1600-MSTR-READ.
  READ MST-KEY-FILE
  AT END MOVE 'Y' TO EOF2.

2000-PROCESS-PARA.
  MOVE 'N' TO MATCH-FOUND

  IF ACCT-NUMBER1 = ACCT-NUMBER2 THEN 
    MOVE ACCT-NUMBER1 TO CURR-ACCT-NUMBER
    PERFORM 2100-DUPLICATES THRU 2100-EXIT
    MOVE 'Y' TO MATCH-FOUND
  ELSE IF ACCT-NUMBER1 < ACCT-NUMBER2 THEN
    IF MATCH-FOUND = 'N'
      MOVE SPACES TO CCH-LC-REC
      MOVE CCH-INP-REC TO CCH-LC-REC
      WRITE CCH-LC-REC
      ADD 1 TO LC-REC-COUNT
    END-IF
    PERFORM 1500-INPUT-READ
  ELSE PERFORM 1600-MSTR-READ
  END-IF
  END-IF.

2100-DUPLICATES.
  PERFORM UNTIL ACCT-NUMBER1 NOT = CURR-ACCT-NUMBER OR EOF1 = 'Y'
  IF CREDIT-TYPE = 'CC' THEN
    MOVE SPACES TO CCH-CC-REC
    MOVE CCH-INP-REC TO CCH-CC-REC
    WRITE CCH-CC-REC
    ADD 1 TO CC-REC-COUNT
  ELSE
    MOVE SPACES TO CCH-LC-REC
    MOVE CCH-INP-REC TO CCH-LC-REC
    WRITE CCH-LC-REC
    ADD 1 TO LC-REC-COUNT
  END-IF
  PERFORM 1500-INPUT-READ
  END-PERFORM.
2100-EXIT.
  EXIT.

4000-CLOSE-PARA.
  IF TRAILER-IND = 'Y'
    MOVE SPACES TO CCH-CC-REC
    MOVE SPACES TO CCH-LC-REC

    WRITE CCH-CC-REC FROM WS-TRAILER-REC
    WRITE CCH-LC-REC FROM WS-TRAILER-REC
  END-IF.

  DISPLAY "INPUT RECORDS COUNT :"INPUT-REC-COUNT.
  DISPLAY "CC RECORDS COUNT :"CC-REC-COUNT.
  DISPLAY "LC RECORDS COUNT :"LC-REC-COUNT.

  COMPUTE TOTAL-COUNT = (CC-REC-COUNT + LC-REC-COUNT)
  IF INPUT-REC-COUNT NOT = TOTAL COUNT
    DISPLAY '*---------------------------------------*'
    DISPLAY '*-PGM ABENDED                           *'     
    DISPLAY '*-CC AND LC RECORD COUNT IS NOT MATCHED *'
    DISPLAY '*-WITH INPUT RECORD COUNT               *'
    DISPLAY '*---------------------------------------*'

    MOVE +0002 TO USER-CODE
    CALL PNBABEND USING USER-CODE
  END-IF.

  CLOSE CCH-INP-FILE.
        MST-KEY-FILE.
        CCH-CC-OUT.
        CCH-LC-OUT.




















































